integrated <- RenameIdents(object = integrated,  '7' = '7_Early_TA')
integrated <- RenameIdents(object = integrated,  '12' = '12_Unknown')
DimPlot(integrated,reduction="umap", label=TRUE, repel=TRUE, pt.size=2, label.size=6)
pdf('Fig5B.pdf',width=14, height=10)
DimPlot(integrated,reduction="umap", label=TRUE, repel=TRUE, pt.size=2, label.size=6)
dev.off()
DefaultAssay(integrated)<-"RNA"
Idents(object = integrated) <- integrated$integrated_snn_res.0.8
plotOrder <- c("5","2","10","0","1","3","4","6","7","8","9","11","12","13","14","15","16")
Idents(integrated) <- factor(Idents(integrated), levels= plotOrder)
VlnPlot(integrated, idents = , features = c("Lgr5"), pt.size = 0.3, slot="data")
pdf('Fig5C.pdf',width=14, height=8)
VlnPlot(integrated, idents = , features = c("Lgr5"), pt.size = 0.3, slot="data")
dev.off()
p.integrated <- table(integrated@meta.data$integrated_snn_res.0.8,integrated@meta.data$orig.ident)
round(prop.table(p.integrated,2),3)
# pdf("output.pdf")
DefaultAssay(integrated)<- "integrated"
Idents(object = integrated) <- integrated$integrated_snn_res.0.8
dd <- subset(integrated, idents = c("2", "5", "10"), downsample=100)
topvst <- head(VariableFeatures(dd), 500)
mat <- as.matrix(dd@assays$integrated@scale.data) #as.matrix(subset_dd@assays$integrated@scale.data)
mat <- mat[topvst,]
genes <- c(GOI.lists$Biton_S1_ISC.I, GOI.lists$Biton_S1_ISC.II, GOI.lists$Biton_S1_ISC.III)
labels <- c(rep('Biton ISC I', length(GOI.lists$Biton_S1_ISC.I)),
rep('Biton ISC II', length(GOI.lists$Biton_S1_ISC.II)),
rep('Biton ISC III', length(GOI.lists$Biton_S1_ISC.III)))
idxs <- which(genes %in% rownames(mat))
genes <- genes[idxs]
labels <- labels[idxs]
mat <- mat[genes,]
ht <- Heatmap(mat, column_names_side = 'top', row_names_gp = gpar(fontsize = 9), column_names_gp = gpar(fontsize = 12),
column_title = '', name = 'scaled data', column_labels = rep('', ncol(mat)),
column_split = factor(as.character(dd$integrated_snn_res.0.8), levels = c('5', '2', '10')),
row_split = labels, row_order = genes, #column_order = sort(colnames(mat)),
cluster_column_slices = FALSE,
top_annotation = HeatmapAnnotation(cluster = as.character(dd$integrated_snn_res.0.8)))
draw(ht)
pdf('Fig5D.pdf',width=12, height=10)
draw(ht)
dev.off()
data <- as.data.frame(read_excel('cluster_2_5_10stem_gsea.xlsx', sheet = 'Sheet2'))
data
data$FDR <- data$`FDR q-val` + 0.001
data$Comparison <- gsub('\\.noNA\\.NES','',data$Comparison)
comparisons <- c('f5_v_al5', 'rf5_v_al5', 'rf.rapa5_v_al5')
sub_data <- data[which(data$Comparison %in% comparisons),]
cl5 <- ggplot(data=sub_data, aes(y=NAME, x=factor(Comparison, levels = comparisons), size=-log10(FDR), color=NES)) +
geom_point() +
scale_color_gradient2(midpoint=0, low="blue", mid="white",
high="red", space ="Lab", limits=c(-3,3))+
scale_size_continuous(range=c(1,6))+
ggtitle('Cluster 5 GSEA') + theme_classic() +
theme(legend.position="right", axis.text.x = element_text(angle = 90)) + ylab('Gene Set') + xlab('Comparison')
cl5
pdf('Fig5F.pdf',width=4, height=4)
cl5
dev.off()
comparisons <- c('f2_v_al2', 'rf2_v_al2', 'rf.rapa2_v_al2')
sub_data <- data[which(data$Comparison %in% comparisons),]
cl2 <- ggplot(data=sub_data, aes(y=NAME, x=factor(Comparison, levels = comparisons), size=-log10(FDR), color=NES)) +
geom_point() +
scale_color_gradient2(midpoint=0, low="blue", mid="white",
high="red", space ="Lab", limits=c(-3,3))+
scale_size_continuous(range=c(1,6))+
ggtitle('Cluster 2 GSEA') + theme_classic() +
theme(legend.position="right", axis.text.x = element_text(angle = 90)) + ylab('Gene Set') + xlab('Comparison')
cl2
pdf('FigS3Da.pdf',width=4, height=4)
cl2
dev.off()
comparisons <- c('f10_v_al10', 'rf10_v_al10', 'rf.rapa10_v_al10')
sub_data <- data[which(data$Comparison %in% comparisons),]
cl10 <- ggplot(data=sub_data, aes(y=NAME, x=factor(Comparison, levels = comparisons), size=-log10(FDR), color=NES)) +
geom_point() +
scale_color_gradient2(midpoint=0, low="blue", mid="white",
high="red", space ="Lab", limits=c(-3,3))+
scale_size_continuous(range=c(1,6))+
ggtitle('Cluster 10 GSEA') + theme_classic() +
theme(legend.position="right", axis.text.x = element_text(angle = 90)) + ylab('Gene Set') + xlab('Comparison')
cl10
pdf('FigS3Db.pdf',width=4, height=4)
cl10
dev.off()
#there is a glitch in this plot, cl2 loses x axis, legend order is different
figS3D <- ggarrange(cl2,cl10, ncol=2, nrow=1)
pdf('FigS3D_incorrect.pdf',width=8, height=4)
figS3D
dev.off()
DefaultAssay(integrated)<-"RNA"
fp.Muc2 <- FeaturePlot(integrated,reduction="umap",features="Muc2",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Muc2
fp.Tff3 <- FeaturePlot(integrated,reduction="umap",features="Tff3",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Tff3
fp.Lyz1 <- FeaturePlot(integrated,reduction="umap",features="Lyz1",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Lyz1
fp.Defa30 <- FeaturePlot(integrated,reduction="umap",features="Defa30",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Defa30
fp.Chga <- FeaturePlot(integrated,reduction="umap",features="Chga",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Chga
fp.Reg3a <- FeaturePlot(integrated,reduction="umap",features="Reg3a",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Reg3a
fp.Alpi <- FeaturePlot(integrated,reduction="umap",features="Alpi",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Alpi
fp.Atoh1 <- FeaturePlot(integrated,reduction="umap",features="Atoh1",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Atoh1
fp.Lgr5 <- FeaturePlot(integrated,reduction="umap",features="Lgr5",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Lgr5
fp.Smoc2 <- FeaturePlot(integrated,reduction="umap",features="Smoc2",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Smoc2
figS3A <- ggarrange(fp.Muc2,fp.Tff3,fp.Lyz1,fp.Defa30,fp.Chga,fp.Reg3a,fp.Alpi,fp.Atoh1,fp.Lgr5,fp.Smoc2, legend = "right", ncol=5, nrow=2)
pdf('FigS3A.pdf',width=20, height=10)
figS3A
dev.off()
DefaultAssay(integrated)<-"RNA"
gene.names <- rownames(integrated@assays$RNA@data)
Idents(object = integrated) <- integrated$seurat_clusters
stem.subset <- subset(integrated, idents = c("2","5","10"))
levels(stem.subset) <- c("5","2","10")
s.InData <- intersect(gene.names,GOI.lists$mm.s)
g2m.InData <- intersect(gene.names,GOI.lists$mm.g2m)
stem.subset[["percent.mm.s"]] <- PercentageFeatureSet(stem.subset, features = s.InData)
stem.subset[["percent.mm.g2m"]] <- PercentageFeatureSet(stem.subset, features = g2m.InData)
mm.s <- VlnPlot(stem.subset, features="percent.mm.s",pt.size = 0.1,slot = "data")
mm.s
mm.g2m <- VlnPlot(stem.subset, features="percent.mm.g2m",pt.size = 0.1,slot = "data")
mm.g2m
fig5E <- ggarrange(mm.s,mm.g2m, legend = FALSE, ncol=2, nrow=1)
pdf('Fig5E.pdf',width=8, height=4)
fig5E
dev.off()
integrated[["percent.mm.s"]] <- PercentageFeatureSet(integrated, features = s.InData)
integrated[["percent.mm.g2m"]] <- PercentageFeatureSet(integrated, features = g2m.InData)
mm.g2m.Flag <- if_else(integrated@meta.data$percent.mm.g2m >= 0.3, "Yes", "No")
integrated@meta.data$mm.g2m.Flag <- mm.g2m.Flag
p <- table(integrated$clust_treat,integrated$mm.g2m.Flag)
p.g2m.summary <- round(prop.table(p,2),3)
mm.s.Flag <- if_else(integrated@meta.data$percent.mm.s >= 0.2, "Yes", "No")
integrated@meta.data$mm.s.Flag <- mm.s.Flag
p <- table(integrated$clust_treat,integrated$mm.s.Flag)
p.s.summary <- round(prop.table(p,1),3)
#exp.matrix <- integrated@assays$RNA@counts
egs <- GeneSet(GOI.lists$Biton_S1_ISC.I, setName="BitonI")
#ES <- escape.matrix(integrated@assays$RNA@counts, gene.sets = egs, groups = 1000, cores = 4)
ES <- enrichIt(obj = integrated, gene.sets=egs, groups = 1000, cores = 4)
#exp.matrix <- integrated@assays$RNA@counts
egs <- GeneSet(GOI.lists$Biton_S1_ISC.I, setName="BitonI")
ES <- escape.matrix(integrated@assays$RNA@counts, gene.sets = egs, groups = 1000, cores = 4)
#exp.matrix <- integrated@assays$RNA@counts
egs <- GeneSet(GOI.lists$Biton_S1_ISC.I, setName="BitonI")
#ES <- escape.matrix(integrated@assays$RNA@counts, gene.sets = egs, groups = 1000, cores = 4)
ES <- enrichIt(obj = integrated, gene.sets=egs, groups = 1000, cores = 4)
exp.matrix <- integrated@assays$RNA@counts
egs <- GeneSet(GOI.lists$Biton_S1_ISC.I, setName="BitonI")
#ES <- escape.matrix(integrated@assays$RNA@counts, gene.sets = egs, groups = 1000, cores = 4)
ES <- enrichIt(exp.matrix, gene.sets=egs, groups = 1000, cores = 4)
exp.matrix <- integrated@assays$RNA@counts
egs <- GeneSet(GOI.lists$Biton_S1_ISC.I, setName="BitonI")
#ES <- escape.matrix(integrated@assays$RNA@counts, gene.sets = egs, groups = 1000, cores = 4)
ES <- enrichIt(exp.matrix, gene.sets=GOI.lists$Biton_S1_ISC.I, groups = 1000, cores = 4)
?gsva
class(integrated@assays$RNA@counts)
exp.matrix <- integrated@assays$RNA@counts
egs <- GeneSet(GOI.lists$Biton_S1_ISC.I, setName="BitonI")
#ES <- escape.matrix(integrated@assays$RNA@counts, gene.sets = egs, groups = 1000, cores = 4)
ES <- enrichIt(integrated@assays$RNA@counts, gene.sets=GOI.lists$Biton_S1_ISC.I, groups = 1000, cores = 4)
?enrichIt
#exp.matrix <- integrated@assays$RNA@counts
egs <- GeneSet(GOI.lists$Biton_S1_ISC.I, setName="BitonI")
#ES <- escape.matrix(integrated@assays$RNA@counts, gene.sets = egs, groups = 1000, cores = 4)
ES <- enrichIt(obj=integrated, gene.sets=egs, groups = 1000, cores = 4,method = "ssGSEA")
#exp.matrix <- integrated@assays$RNA@counts
egs <- GeneSet(GOI.lists$Biton_S1_ISC.I, setName="BitonI")
#ES <- escape.matrix(integrated@assays$RNA@counts, gene.sets = egs, groups = 1000, cores = 4)
ES <- enrichIt(obj=integrated, gene.sets=GOI.lists$Biton_S1_ISC.I, groups = 1000, cores = 4,method = "ssGSEA")
knitr::opts_chunk$set(echo = TRUE)
library(Seurat)
library(tidyverse)
library(cowplot)
library(umap)
library(Matrix)
library(readxl)
library(openxlsx)
library(ggrepel)
library(ggpubr)
library(sctransform)
library(knitr)
library(kableExtra)
library(DESeq2)
library(escape)
library(GSVA)
library(dittoSeq)
library(GSEABase)
library(scater)
library(ComplexHeatmap)
gene.lists <- read_xlsx("Munoz_Yilmaz_CellCycle_signatures.xlsx")
gene.lists.names <- colnames(gene.lists)
GOI.lists <- c()
for (i in gene.lists.names) {
tmpList <- gene.lists %>% dplyr::select(all_of(i))
tmpList <- tmpList[!is.na(tmpList)]
GOI.lists[[i]] <- tmpList
}
load("integrated_091120.Robj")
DefaultAssay(integrated)<-"integrated"
DimPlot(integrated,reduction="umap",split.by="orig.ident",group.by="orig.ident")
DimPlot(integrated,reduction="umap",group.by="orig.ident")
DimPlot(integrated,reduction="umap",group.by="integrated_snn_res.0.8", label=TRUE)
load("integrated_091120.Robj")
DefaultAssay(integrated)<-"integrated"
DimPlot(integrated,reduction="umap",split.by="orig.ident",group.by="orig.ident")
DimPlot(integrated,reduction="umap",group.by="orig.ident")
DimPlot(integrated,reduction="umap",group.by="integrated_snn_res.0.8", label=TRUE)
integrated@meta.data$treat_clust <- paste0(integrated@meta.data$orig.ident,integrated@meta.data$integrated_snn_res.0.8)
integrated@meta.data$clust_treat <- paste0(integrated@meta.data$integrated_snn_res.0.8,integrated@meta.data$orig.ident)
integrated@meta.data$celltype <- integrated@meta.data$integrated_snn_res.0.8
Idents(object = integrated) <- integrated$celltype
integrated <- RenameIdents(object = integrated,  '16' = '16_Tuft')
integrated <- RenameIdents(object = integrated,  '11' = '11_EC')
integrated <- RenameIdents(object = integrated,  '13' = '13_EEC')
integrated <- RenameIdents(object = integrated,  '2' = '2_Stem')
integrated <- RenameIdents(object = integrated,  '5' = '5_Stem')
integrated <- RenameIdents(object = integrated,  '10' = '10_Stem')
integrated <- RenameIdents(object = integrated,  '14' = '14_Paneth')
integrated <- RenameIdents(object = integrated,  '8' = '8_Secretory_Progenitor')
integrated <- RenameIdents(object = integrated,  '9' = '9_Goblet')
integrated <- RenameIdents(object = integrated,  '1' = '1_Secretory_Progenitor')
integrated <- RenameIdents(object = integrated,  '4' = '4_Secretory_Progenitor')
integrated <- RenameIdents(object = integrated,  '15' = '15_Secretory_Progenitor')
integrated <- RenameIdents(object = integrated,  '3' = '3_EC_Progenitor')
integrated <- RenameIdents(object = integrated,  '6' = '6_EC_Progenitor')
integrated <- RenameIdents(object = integrated,  '0' = '0_Early_TA')
integrated <- RenameIdents(object = integrated,  '7' = '7_Early_TA')
integrated <- RenameIdents(object = integrated,  '12' = '12_Unknown')
DimPlot(integrated,reduction="umap", label=TRUE, repel=TRUE, pt.size=2, label.size=6)
DefaultAssay(integrated)<-"RNA"
Idents(object = integrated) <- integrated$integrated_snn_res.0.8
plotOrder <- c("5","2","10","0","1","3","4","6","7","8","9","11","12","13","14","15","16")
Idents(integrated) <- factor(Idents(integrated), levels= plotOrder)
VlnPlot(integrated, idents = , features = c("Lgr5"), pt.size = 0.3, slot="data")
p.integrated <- table(integrated@meta.data$integrated_snn_res.0.8,integrated@meta.data$orig.ident)
round(prop.table(p.integrated,2),3)
# pdf("output.pdf")
DefaultAssay(integrated)<- "integrated"
Idents(object = integrated) <- integrated$integrated_snn_res.0.8
dd <- subset(integrated, idents = c("2", "5", "10"), downsample=100)
topvst <- head(VariableFeatures(dd), 500)
mat <- as.matrix(dd@assays$integrated@scale.data) #as.matrix(subset_dd@assays$integrated@scale.data)
mat <- mat[topvst,]
genes <- c(GOI.lists$Biton_S1_ISC.I, GOI.lists$Biton_S1_ISC.II, GOI.lists$Biton_S1_ISC.III)
labels <- c(rep('Biton ISC I', length(GOI.lists$Biton_S1_ISC.I)),
rep('Biton ISC II', length(GOI.lists$Biton_S1_ISC.II)),
rep('Biton ISC III', length(GOI.lists$Biton_S1_ISC.III)))
idxs <- which(genes %in% rownames(mat))
genes <- genes[idxs]
labels <- labels[idxs]
mat <- mat[genes,]
ht <- Heatmap(mat, column_names_side = 'top', row_names_gp = gpar(fontsize = 9), column_names_gp = gpar(fontsize = 12),
column_title = '', name = 'scaled data', column_labels = rep('', ncol(mat)),
column_split = factor(as.character(dd$integrated_snn_res.0.8), levels = c('5', '2', '10')),
row_split = labels, row_order = genes, #column_order = sort(colnames(mat)),
cluster_column_slices = FALSE,
top_annotation = HeatmapAnnotation(cluster = as.character(dd$integrated_snn_res.0.8)))
draw(ht)
pdf('Fig5D.pdf',width=12, height=10)
draw(ht)
dev.off()
# pdf("output.pdf")
DefaultAssay(integrated)<- "integrated"
Idents(object = integrated) <- integrated$integrated_snn_res.0.8
dd <- subset(integrated, idents = c("2", "5", "10"), downsample=100)
topvst <- head(VariableFeatures(dd), 500)
mat <- as.matrix(dd@assays$integrated@scale.data) #as.matrix(subset_dd@assays$integrated@scale.data)
mat <- mat[topvst,]
genes <- c(GOI.lists$Biton_S1_ISC.I, GOI.lists$Biton_S1_ISC.II, GOI.lists$Biton_S1_ISC.III)
labels <- c(rep('Biton ISC I', length(GOI.lists$Biton_S1_ISC.I)),
rep('Biton ISC II', length(GOI.lists$Biton_S1_ISC.II)),
rep('Biton ISC III', length(GOI.lists$Biton_S1_ISC.III)))
idxs <- which(genes %in% rownames(mat))
genes <- genes[idxs]
labels <- labels[idxs]
mat <- mat[genes,]
ht <- Heatmap(mat, column_names_side = 'top', row_names_gp = gpar(fontsize = 9), column_names_gp = gpar(fontsize = 12),
column_title = '', name = 'scaled data', column_labels = rep('', ncol(mat)),
column_split = factor(as.character(dd$integrated_snn_res.0.8), levels = c('5', '2', '10')),
row_split = labels, row_order = genes, #column_order = sort(colnames(mat)),
cluster_column_slices = FALSE,
top_annotation = HeatmapAnnotation(cluster = as.character(dd$integrated_snn_res.0.8)))
draw(ht)
DefaultAssay(integrated)<- "integrated"
Idents(object = integrated) <- integrated$integrated_snn_res.0.8
dd <- subset(integrated, idents = c("2", "5", "10"), downsample=100)
topvst <- head(VariableFeatures(dd), 500)
mat <- as.matrix(dd@assays$integrated@scale.data) #as.matrix(subset_dd@assays$integrated@scale.data)
mat <- mat[topvst,]
genes <- c(GOI.lists$Biton_S1_ISC.I, GOI.lists$Biton_S1_ISC.II, GOI.lists$Biton_S1_ISC.III)
labels <- c(rep('Biton ISC I', length(GOI.lists$Biton_S1_ISC.I)),
rep('Biton ISC II', length(GOI.lists$Biton_S1_ISC.II)),
rep('Biton ISC III', length(GOI.lists$Biton_S1_ISC.III)))
idxs <- which(genes %in% rownames(mat))
genes <- genes[idxs]
labels <- labels[idxs]
mat <- mat[genes,]
ht <- Heatmap(mat, column_names_side = 'top', row_names_gp = gpar(fontsize = 9), column_names_gp = gpar(fontsize = 12),
column_title = '', name = 'scaled data', column_labels = rep('', ncol(mat)),
column_split = factor(as.character(dd$integrated_snn_res.0.8), levels = c('5', '2', '10')),
row_split = labels, row_order = genes, #column_order = sort(colnames(mat)),
cluster_column_slices = FALSE,
top_annotation = HeatmapAnnotation(cluster = as.character(dd$integrated_snn_res.0.8)))
draw(ht)
data <- as.data.frame(read_excel('cluster_2_5_10stem_gsea.xlsx', sheet = 'Sheet2'))
data
data$FDR <- data$`FDR q-val` + 0.001
data$Comparison <- gsub('\\.noNA\\.NES','',data$Comparison)
comparisons <- c('f5_v_al5', 'rf5_v_al5', 'rf.rapa5_v_al5')
sub_data <- data[which(data$Comparison %in% comparisons),]
cl5 <- ggplot(data=sub_data, aes(y=NAME, x=factor(Comparison, levels = comparisons), size=-log10(FDR), color=NES)) +
geom_point() +
scale_color_gradient2(midpoint=0, low="blue", mid="white",
high="red", space ="Lab", limits=c(-3,3))+
scale_size_continuous(range=c(1,6))+
ggtitle('Cluster 5 GSEA') + theme_classic() +
theme(legend.position="right", axis.text.x = element_text(angle = 90)) + ylab('Gene Set') + xlab('Comparison')
cl5
pdf('Fig5F.pdf',width=4, height=4)
cl5
dev.off()
comparisons <- c('f2_v_al2', 'rf2_v_al2', 'rf.rapa2_v_al2')
sub_data <- data[which(data$Comparison %in% comparisons),]
cl2 <- ggplot(data=sub_data, aes(y=NAME, x=factor(Comparison, levels = comparisons), size=-log10(FDR), color=NES)) +
geom_point() +
scale_color_gradient2(midpoint=0, low="blue", mid="white",
high="red", space ="Lab", limits=c(-3,3))+
scale_size_continuous(range=c(1,6))+
ggtitle('Cluster 2 GSEA') + theme_classic() +
theme(legend.position="right", axis.text.x = element_text(angle = 90)) + ylab('Gene Set') + xlab('Comparison')
cl2
pdf('FigS3Da.pdf',width=4, height=4)
cl2
dev.off()
comparisons <- c('f10_v_al10', 'rf10_v_al10', 'rf.rapa10_v_al10')
sub_data <- data[which(data$Comparison %in% comparisons),]
cl10 <- ggplot(data=sub_data, aes(y=NAME, x=factor(Comparison, levels = comparisons), size=-log10(FDR), color=NES)) +
geom_point() +
scale_color_gradient2(midpoint=0, low="blue", mid="white",
high="red", space ="Lab", limits=c(-3,3))+
scale_size_continuous(range=c(1,6))+
ggtitle('Cluster 10 GSEA') + theme_classic() +
theme(legend.position="right", axis.text.x = element_text(angle = 90)) + ylab('Gene Set') + xlab('Comparison')
cl10
pdf('FigS3Db.pdf',width=4, height=4)
cl10
dev.off()
#there is a glitch in this plot, cl2 loses x axis, legend order is different
figS3D <- ggarrange(cl2,cl10, ncol=2, nrow=1)
pdf('FigS3D_incorrect.pdf',width=8, height=4)
figS3D
dev.off()
data <- as.data.frame(read_excel('cluster_2_5_10stem_gsea.xlsx', sheet = 'Sheet2'))
data
data$FDR <- data$`FDR q-val` + 0.001
data$Comparison <- gsub('\\.noNA\\.NES','',data$Comparison)
comparisons <- c('f5_v_al5', 'rf5_v_al5', 'rf.rapa5_v_al5')
sub_data <- data[which(data$Comparison %in% comparisons),]
cl5 <- ggplot(data=sub_data, aes(y=NAME, x=factor(Comparison, levels = comparisons), size=-log10(FDR), color=NES)) +
geom_point() +
scale_color_gradient2(midpoint=0, low="blue", mid="white",
high="red", space ="Lab", limits=c(-3,3))+
scale_size_continuous(range=c(1,6))+
ggtitle('Cluster 5 GSEA') + theme_classic() +
theme(legend.position="right", axis.text.x = element_text(angle = 90)) + ylab('Gene Set') + xlab('Comparison')
cl5
comparisons <- c('f2_v_al2', 'rf2_v_al2', 'rf.rapa2_v_al2')
sub_data <- data[which(data$Comparison %in% comparisons),]
cl2 <- ggplot(data=sub_data, aes(y=NAME, x=factor(Comparison, levels = comparisons), size=-log10(FDR), color=NES)) +
geom_point() +
scale_color_gradient2(midpoint=0, low="blue", mid="white",
high="red", space ="Lab", limits=c(-3,3))+
scale_size_continuous(range=c(1,6))+
ggtitle('Cluster 2 GSEA') + theme_classic() +
theme(legend.position="right", axis.text.x = element_text(angle = 90)) + ylab('Gene Set') + xlab('Comparison')
cl2
comparisons <- c('f10_v_al10', 'rf10_v_al10', 'rf.rapa10_v_al10')
sub_data <- data[which(data$Comparison %in% comparisons),]
cl10 <- ggplot(data=sub_data, aes(y=NAME, x=factor(Comparison, levels = comparisons), size=-log10(FDR), color=NES)) +
geom_point() +
scale_color_gradient2(midpoint=0, low="blue", mid="white",
high="red", space ="Lab", limits=c(-3,3))+
scale_size_continuous(range=c(1,6))+
ggtitle('Cluster 10 GSEA') + theme_classic() +
theme(legend.position="right", axis.text.x = element_text(angle = 90)) + ylab('Gene Set') + xlab('Comparison')
cl10
DefaultAssay(integrated)<-"RNA"
fp.Muc2 <- FeaturePlot(integrated,reduction="umap",features="Muc2",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Muc2
fp.Tff3 <- FeaturePlot(integrated,reduction="umap",features="Tff3",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Tff3
fp.Lyz1 <- FeaturePlot(integrated,reduction="umap",features="Lyz1",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Lyz1
fp.Defa30 <- FeaturePlot(integrated,reduction="umap",features="Defa30",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Defa30
fp.Chga <- FeaturePlot(integrated,reduction="umap",features="Chga",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Chga
fp.Reg3a <- FeaturePlot(integrated,reduction="umap",features="Reg3a",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Reg3a
fp.Alpi <- FeaturePlot(integrated,reduction="umap",features="Alpi",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Alpi
fp.Atoh1 <- FeaturePlot(integrated,reduction="umap",features="Atoh1",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Atoh1
fp.Lgr5 <- FeaturePlot(integrated,reduction="umap",features="Lgr5",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Lgr5
fp.Smoc2 <- FeaturePlot(integrated,reduction="umap",features="Smoc2",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Smoc2
figS3A <- ggarrange(fp.Muc2,fp.Tff3,fp.Lyz1,fp.Defa30,fp.Chga,fp.Reg3a,fp.Alpi,fp.Atoh1,fp.Lgr5,fp.Smoc2, legend = "right", ncol=5, nrow=2)
pdf('FigS3A.pdf',width=20, height=10)
figS3A
dev.off()
DefaultAssay(integrated)<-"RNA"
fp.Muc2 <- FeaturePlot(integrated,reduction="umap",features="Muc2",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Muc2
fp.Tff3 <- FeaturePlot(integrated,reduction="umap",features="Tff3",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Tff3
fp.Lyz1 <- FeaturePlot(integrated,reduction="umap",features="Lyz1",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Lyz1
fp.Defa30 <- FeaturePlot(integrated,reduction="umap",features="Defa30",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Defa30
fp.Chga <- FeaturePlot(integrated,reduction="umap",features="Chga",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Chga
fp.Reg3a <- FeaturePlot(integrated,reduction="umap",features="Reg3a",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Reg3a
fp.Alpi <- FeaturePlot(integrated,reduction="umap",features="Alpi",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Alpi
fp.Atoh1 <- FeaturePlot(integrated,reduction="umap",features="Atoh1",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Atoh1
fp.Lgr5 <- FeaturePlot(integrated,reduction="umap",features="Lgr5",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Lgr5
fp.Smoc2 <- FeaturePlot(integrated,reduction="umap",features="Smoc2",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Smoc2
figS3A <- ggarrange(fp.Muc2,fp.Tff3,fp.Lyz1,fp.Defa30,fp.Chga,fp.Reg3a,fp.Alpi,fp.Atoh1,fp.Lgr5,fp.Smoc2, legend = "right", ncol=5, nrow=2)
figS3A
DefaultAssay(integrated)<-"RNA"
fp.Muc2 <- FeaturePlot(integrated,reduction="umap",features="Muc2",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Muc2
fp.Tff3 <- FeaturePlot(integrated,reduction="umap",features="Tff3",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Tff3
fp.Lyz1 <- FeaturePlot(integrated,reduction="umap",features="Lyz1",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Lyz1
fp.Defa30 <- FeaturePlot(integrated,reduction="umap",features="Defa30",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Defa30
fp.Chga <- FeaturePlot(integrated,reduction="umap",features="Chga",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Chga
fp.Reg3a <- FeaturePlot(integrated,reduction="umap",features="Reg3a",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Reg3a
fp.Alpi <- FeaturePlot(integrated,reduction="umap",features="Alpi",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Alpi
fp.Atoh1 <- FeaturePlot(integrated,reduction="umap",features="Atoh1",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Atoh1
fp.Lgr5 <- FeaturePlot(integrated,reduction="umap",features="Lgr5",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Lgr5
fp.Smoc2 <- FeaturePlot(integrated,reduction="umap",features="Smoc2",cols=c("grey","red"), slot = "data",label=TRUE, repel=TRUE,label.size=4)
fp.Smoc2
DefaultAssay(integrated)<-"RNA"
gene.names <- rownames(integrated@assays$RNA@data)
Idents(object = integrated) <- integrated$seurat_clusters
stem.subset <- subset(integrated, idents = c("2","5","10"))
levels(stem.subset) <- c("5","2","10")
s.InData <- intersect(gene.names,GOI.lists$mm.s)
g2m.InData <- intersect(gene.names,GOI.lists$mm.g2m)
stem.subset[["percent.mm.s"]] <- PercentageFeatureSet(stem.subset, features = s.InData)
stem.subset[["percent.mm.g2m"]] <- PercentageFeatureSet(stem.subset, features = g2m.InData)
mm.s <- VlnPlot(stem.subset, features="percent.mm.s",pt.size = 0.1,slot = "data")
#mm.s
mm.g2m <- VlnPlot(stem.subset, features="percent.mm.g2m",pt.size = 0.1,slot = "data")
#mm.g2m
cellcycleFigure <- ggarrange(mm.s,mm.g2m, legend = FALSE, ncol=2, nrow=1)
cellcycleFigure
integrated[["percent.mm.s"]] <- PercentageFeatureSet(integrated, features = s.InData)
integrated[["percent.mm.g2m"]] <- PercentageFeatureSet(integrated, features = g2m.InData)
mm.g2m.Flag <- if_else(integrated@meta.data$percent.mm.g2m >= 0.3, "Yes", "No")
integrated@meta.data$mm.g2m.Flag <- mm.g2m.Flag
p <- table(integrated$clust_treat,integrated$mm.g2m.Flag)
p.g2m.summary <- round(prop.table(p,2),3)
p.g2m.summary
mm.s.Flag <- if_else(integrated@meta.data$percent.mm.s >= 0.2, "Yes", "No")
integrated@meta.data$mm.s.Flag <- mm.s.Flag
p <- table(integrated$clust_treat,integrated$mm.s.Flag)
p.s.summary <- round(prop.table(p,1),3)
p.s.summary
DefaultAssay(integrated)<-"RNA"
Idents(object = integrated) <- integrated$treat_clust
levels(x = integrated)
id1 <- "al5"
id2 <- "al2"
outData <- paste(id1,id2,"Markers",sep=".")
outData <- FindMarkers(integrated, ident.1 = id1, ident.2 = id2,logfc.threshold = 0, assay="RNA")
outData <- tibble::rownames_to_column(outData,"#MGISym")
rnk.tmp <- outData %>% dplyr::select(c("#MGISym","avg_logFC"))
write.table(rnk.tmp, sep='\t',file=paste0(id1,"_v_",id2,".rnk"),col.names=TRUE, quote=FALSE, row.names=FALSE)
id1 <- "al10"
id2 <- "al2"
outData <- paste(id1,id2,"Markers",sep=".")
outData <- FindMarkers(integrated, ident.1 = id1, ident.2 = id2,logfc.threshold = 0, assay="RNA")
outData <- tibble::rownames_to_column(outData,"#MGISym")
rnk.tmp <- outData %>% dplyr::select(c("#MGISym","avg_logFC"))
write.table(rnk.tmp, sep='\t',file=paste0(id1,"_v_",id2,".rnk"),col.names=TRUE, quote=FALSE, row.names=FALSE)
id1 <- "al10"
id2 <- "al5"
outData <- paste(id1,id2,"Markers",sep=".")
outData <- FindMarkers(integrated, ident.1 = id1, ident.2 = id2,logfc.threshold = 0, assay="RNA")
outData <- tibble::rownames_to_column(outData,"#MGISym")
rnk.tmp <- outData %>% dplyr::select(c("#MGISym","avg_logFC"))
write.table(rnk.tmp, sep='\t',file=paste0(id1,"_v_",id2,".rnk"),col.names=TRUE, quote=FALSE, row.names=FALSE)
